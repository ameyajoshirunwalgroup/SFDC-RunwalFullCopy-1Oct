public class BilldeskPayPageController {
    
    public String bookingId {get;set;}
    public String OpportunityId {get;set;}
    public String towerId {get;set;}
    public String Amount {get;set;}
    public String ProjectUnit {get;set;}
    public String TypeOfAmount {get;set;}
    public String msg {get;set;}
    public String data = System.currentPagereference().getParameters().get('transaction_response');
    
    
    public pageReference successPage(){
        
        if(data != null && data != ''){
            System.debug('data: ' + data);
            
            String decodedString;
            if(Test.isRunningTest()){
                decodedString = data;
            }
            Integer index1 = data.indexOf('.');
            if(index1 != null){
                data = data.subString(index1+1, data.length()-1);
                Integer index2 = data.indexOf('.');
                if(index2 != null){
                    data = data.subString(0,index2);
                }
            }
            if(!Test.isRunningTest()){
               Blob base64decode = EncodingUtil.base64Decode(data);
            	decodedString = base64decode.toString(); 
            }
            
            System.debug('decodedString: ' + decodedString);
            pageReference pageRef = new Pagereference('https://runwal--fullcopy.sandbox.my.site.com/customer/s/customerledger');
            if(data != null && data != ''){
                BilldeskResponse resp = (BilldeskResponse) System.JSON.deserialize(decodedString.toString(), BilldeskResponse.class);
                
                List<Receipt__c> receipt = [SELECT Id, Opportunity__c, Opportunity__r.RW_Project__r.Name FROM Receipt__c WHERE Billdesk_Order_Id__c =: resp.orderid LIMIT 1];
                
                if(receipt.size() > 0){
                    receipt[0].Total_Amount__c = Decimal.valueOf(resp.amount);
                    receipt[0].BillDesk_Payment_Mode__c = resp.payment_method_type;
                    receipt[0].Payment_Gateway_Response_Code__c = resp.auth_status;
                    receipt[0].Receipt_Status__c = (resp.auth_status == '0300')? 'Success' : 'Failure';
                    msg = 'Payment Success';
                    if(resp.auth_status == '0300'){
                        pageRef.getParameters().put('c__mahalaxmiPaymentStatus', 'success');
                        pageRef.getParameters().put('c__mahalaxmiPaymentMessage', 'Payment is Successfull');
                        //pageRef.setRedirect(true);
                        //return pageRef;	
                    }else if(resp.auth_status == '0399'){
                        ERP_Integration_Log__c integrationLog = new ERP_Integration_Log__c();
                        integrationLog.API_Name__c ='BillDesk';
                        //integrationLog.Request__c = jsonBody;
                        integrationLog.Opportunity__c = receipt[0].Opportunity__c;
                        integrationLog.Error_Type__c = 'Timeout Error';
                        integrationLog.Status__c ='Failure';
                        integrationLog.Error_Reason__c = 'transaction_error_code: ' + resp.transaction_error_code + '; transaction_error_desc: ' + resp.transaction_error_desc + '; transaction_error_type: ' + resp.transaction_error_type;
                        insert integrationLog; 
                        
                        pageRef.getParameters().put('c__mahalaxmiPaymentStatus', 'fail');
                        pageRef.getParameters().put('c__mahalaxmiPaymentMessage', resp.transaction_error_desc);
                    }
                    update receipt;
                }
                
            }
            //pageReference pageRef = new Pagereference('https://runwal--fullcopy.sandbox.my.site.com/customer/s/customerledger');
            //pageRef.getParameters().put('c__mahalaxmiPaymentMessage', 'Payment is successfull');
            pageRef.setRedirect(true);
            return pageRef;	
        }else{
            return null;
        }
    }
    
    public class BilldeskResponse{
        public string objectid;
        public string transactionid;
        public string orderid;
        public string mercid;
        public string transaction_date;
        public string amount;
        public string surcharge;
        public string discount;
        public string charge_amount;
        public AdditionalInfo additional_info;
        public string ru;
        public string txn_process_type;
        public string bankid;
        public string itemcode;
        public string bank_ref_no;
        public string auth_status;
        public string transaction_error_code;
        public string transaction_error_desc;
        public string transaction_error_type;
        public string payment_method_type;
        public UPI upi;
        public string payment_category;
    }
    
    public class AdditionalInfo{
        public string additional_info1;
        public string additional_info2;
    }
    
    public class UPI{
        public string vpa;
        public string masked_vpa;
    }

}